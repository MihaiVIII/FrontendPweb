/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FacturiAddDTO,
  FacturiDTOPagedResponseRequestResponse,
  FacturiDTORequestResponse,
  FacturiUpdateDTO,
  RequestResponse,
} from '../models';
import {
    FacturiAddDTOFromJSON,
    FacturiAddDTOToJSON,
    FacturiDTOPagedResponseRequestResponseFromJSON,
    FacturiDTOPagedResponseRequestResponseToJSON,
    FacturiDTORequestResponseFromJSON,
    FacturiDTORequestResponseToJSON,
    FacturiUpdateDTOFromJSON,
    FacturiUpdateDTOToJSON,
    RequestResponseFromJSON,
    RequestResponseToJSON,
} from '../models';

export interface ApiFacturiCancelIdDeleteRequest {
    id: string;
}

export interface ApiFacturiCreatePostRequest {
    facturiAddDTO?: FacturiAddDTO;
}

export interface ApiFacturiGetByIdIdGetRequest {
    id: string;
}

export interface ApiFacturiGetFromUserIdGetRequest {
    search?: string;
    page?: number;
    pageSize?: number;
}

export interface ApiFacturiUpdatePutRequest {
    facturiUpdateDTO?: FacturiUpdateDTO;
}

/**
 * 
 */
export class FacturiApi extends runtime.BaseAPI {

    /**
     */
    async apiFacturiCancelIdDeleteRaw(requestParameters: ApiFacturiCancelIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiFacturiCancelIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Facturi/Cancel/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiFacturiCancelIdDelete(requestParameters: ApiFacturiCancelIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiFacturiCancelIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFacturiCreatePostRaw(requestParameters: ApiFacturiCreatePostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Facturi/Create`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FacturiAddDTOToJSON(requestParameters.facturiAddDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiFacturiCreatePost(requestParameters: ApiFacturiCreatePostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiFacturiCreatePostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFacturiGetByIdIdGetRaw(requestParameters: ApiFacturiGetByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FacturiDTORequestResponse>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiFacturiGetByIdIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Facturi/GetById/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FacturiDTORequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiFacturiGetByIdIdGet(requestParameters: ApiFacturiGetByIdIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FacturiDTORequestResponse> {
        const response = await this.apiFacturiGetByIdIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFacturiGetFromUserIdGetRaw(requestParameters: ApiFacturiGetFromUserIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FacturiDTOPagedResponseRequestResponse>> {
        const queryParameters: any = {};

        if (requestParameters.search !== undefined) {
            queryParameters['Search'] = requestParameters.search;
        }

        if (requestParameters.page !== undefined) {
            queryParameters['Page'] = requestParameters.page;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['PageSize'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Facturi/GetFromUserId`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FacturiDTOPagedResponseRequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiFacturiGetFromUserIdGet(requestParameters: ApiFacturiGetFromUserIdGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FacturiDTOPagedResponseRequestResponse> {
        const response = await this.apiFacturiGetFromUserIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiFacturiUpdatePutRaw(requestParameters: ApiFacturiUpdatePutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RequestResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/Facturi/Update`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: FacturiUpdateDTOToJSON(requestParameters.facturiUpdateDTO),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RequestResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiFacturiUpdatePut(requestParameters: ApiFacturiUpdatePutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RequestResponse> {
        const response = await this.apiFacturiUpdatePutRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
