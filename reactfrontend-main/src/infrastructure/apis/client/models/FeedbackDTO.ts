/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FeedbackEnum } from './FeedbackEnum';
import {
    FeedbackEnumFromJSON,
    FeedbackEnumFromJSONTyped,
    FeedbackEnumToJSON,
} from './FeedbackEnum';

/**
 * 
 * @export
 * @interface FeedbackDTO
 */
export interface FeedbackDTO {
    /**
     * 
     * @type {number}
     * @memberof FeedbackDTO
     */
    score?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FeedbackDTO
     */
    anonimous?: boolean;
    /**
     * 
     * @type {FeedbackEnum}
     * @memberof FeedbackDTO
     */
    quality?: FeedbackEnum;
    /**
     * 
     * @type {string}
     * @memberof FeedbackDTO
     */
    content?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedbackDTO
     */
    userId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FeedbackDTO
     */
    date?: Date | null;
}

/**
 * Check if a given object implements the FeedbackDTO interface.
 */
export function instanceOfFeedbackDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FeedbackDTOFromJSON(json: any): FeedbackDTO {
    return FeedbackDTOFromJSONTyped(json, false);
}

export function FeedbackDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedbackDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'score': !exists(json, 'score') ? undefined : json['score'],
        'anonimous': !exists(json, 'anonimous') ? undefined : json['anonimous'],
        'quality': !exists(json, 'quality') ? undefined : FeedbackEnumFromJSON(json['quality']),
        'content': !exists(json, 'content') ? undefined : json['content'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'date': !exists(json, 'date') ? undefined : (json['date'] === null ? null : new Date(json['date'])),
    };
}

export function FeedbackDTOToJSON(value?: FeedbackDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'score': value.score,
        'anonimous': value.anonimous,
        'quality': FeedbackEnumToJSON(value.quality),
        'content': value.content,
        'userId': value.userId,
        'date': value.date === undefined ? undefined : (value.date === null ? null : value.date.toISOString()),
    };
}

